diff -Naurp u-boot-source.orig/board/rockchip/evb_rk3399/evb-rk3399.c u-boot-source.patched/board/rockchip/evb_rk3399/evb-rk3399.c
--- u-boot-source.orig/board/rockchip/evb_rk3399/evb-rk3399.c	2020-02-29 15:14:01.254450492 +0100
+++ u-boot-source.patched/board/rockchip/evb_rk3399/evb-rk3399.c	2020-03-01 19:19:20.079847402 +0100
@@ -5,26 +5,34 @@
 
 #include <common.h>
 #include <dm.h>
+#include <usb.h>
 #include <asm/arch-rockchip/periph.h>
 #include <power/regulator.h>
 
-#ifndef CONFIG_SPL_BUILD
-int board_early_init_f(void)
+#if !defined(CONFIG_SPL_BUILD) && !defined(CONFIG_TPL_BUILD)
+void usb_hub_reset_devices(struct usb_hub_device *hub, int port)
 {
-	struct udevice *regulator;
-	int ret;
+	struct udevice *udev = hub->pusb_dev->dev;
+	struct udevice *regulator_usb2;
+	struct udevice *regulator_usb3;
 
-	ret = regulator_get_by_platname("vcc5v0_host", &regulator);
-	if (ret) {
-		debug("%s vcc5v0_host init fail! ret %d\n", __func__, ret);
-		goto out;
-	}
-
-	ret = regulator_set_enable(regulator, true);
-	if (ret)
-		debug("%s vcc5v0-host-en set fail! ret %d\n", __func__, ret);
+	/* Act only on the very first on-board "hub" */
+	if ( (port != 1) || udev->seq || !usb_hub_is_root_hub(udev))
+		return;
 
-out:
-	return 0;
+	/* Get regulator */
+	if ( regulator_get_by_platname("vcc5v0_host", &regulator_usb2) ||
+	     regulator_get_by_platname("vcc5v0_typec", &regulator_usb3) )
+		return;
+
+	/* Power off */
+	regulator_set_enable(regulator_usb2, false);
+	regulator_set_enable(regulator_usb3, false);
+
+	mdelay(250);
+
+	/* Power on */
+	regulator_set_enable(regulator_usb2, true);
+	regulator_set_enable(regulator_usb3, true);
 }
 #endif
